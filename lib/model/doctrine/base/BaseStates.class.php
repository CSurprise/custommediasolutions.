<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('States', 'doctrine');

/**
 * BaseStates
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property timestamp $deleted_at
 * @property string $state
 * @property string $abbreviation
 * @property Doctrine_Collection $Submissions
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method timestamp           getCreatedAt()    Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()    Returns the current record's "updated_at" value
 * @method timestamp           getDeletedAt()    Returns the current record's "deleted_at" value
 * @method string              getState()        Returns the current record's "state" value
 * @method string              getAbbreviation() Returns the current record's "abbreviation" value
 * @method Doctrine_Collection getSubmissions()  Returns the current record's "Submissions" collection
 * @method States              setId()           Sets the current record's "id" value
 * @method States              setCreatedAt()    Sets the current record's "created_at" value
 * @method States              setUpdatedAt()    Sets the current record's "updated_at" value
 * @method States              setDeletedAt()    Sets the current record's "deleted_at" value
 * @method States              setState()        Sets the current record's "state" value
 * @method States              setAbbreviation() Sets the current record's "abbreviation" value
 * @method States              setSubmissions()  Sets the current record's "Submissions" collection
 * 
 * @package    models
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStates extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('states');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('state', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('abbreviation', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Submissions', array(
             'local' => 'id',
             'foreign' => 'state'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}