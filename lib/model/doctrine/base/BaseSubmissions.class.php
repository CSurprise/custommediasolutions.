<?php

/**
 * BaseSubmissions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $website_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property string $first_name
 * @property string $last_name
 * @property integer $age
 * @property integer $gender
 * @property string $phone
 * @property string $cell
 * @property string $height
 * @property string $weight
 * @property string $email
 * @property string $address
 * @property string $city
 * @property integer $state
 * @property string $zipcode
 * @property string $interests
 * @property string $submitters_ip
 * @property string $comments
 * @property Websites $Websites
 * @property States $States
 * 
 * @method integer     getId()            Returns the current record's "id" value
 * @method integer     getWebsiteId()     Returns the current record's "website_id" value
 * @method timestamp   getCreatedAt()     Returns the current record's "created_at" value
 * @method timestamp   getUpdatedAt()     Returns the current record's "updated_at" value
 * @method string      getFirstName()     Returns the current record's "first_name" value
 * @method string      getLastName()      Returns the current record's "last_name" value
 * @method integer     getAge()           Returns the current record's "age" value
 * @method integer     getGender()        Returns the current record's "gender" value
 * @method string      getPhone()         Returns the current record's "phone" value
 * @method string      getCell()          Returns the current record's "cell" value
 * @method string      getHeight()        Returns the current record's "height" value
 * @method string      getWeight()        Returns the current record's "weight" value
 * @method string      getEmail()         Returns the current record's "email" value
 * @method string      getAddress()       Returns the current record's "address" value
 * @method string      getCity()          Returns the current record's "city" value
 * @method integer     getState()         Returns the current record's "state" value
 * @method string      getZipcode()       Returns the current record's "zipcode" value
 * @method string      getInterests()     Returns the current record's "interests" value
 * @method string      getSubmittersIp()  Returns the current record's "submitters_ip" value
 * @method string      getComments()      Returns the current record's "comments" value
 * @method Websites    getWebsites()      Returns the current record's "Websites" value
 * @method States      getStates()        Returns the current record's "States" value
 * @method Submissions setId()            Sets the current record's "id" value
 * @method Submissions setWebsiteId()     Sets the current record's "website_id" value
 * @method Submissions setCreatedAt()     Sets the current record's "created_at" value
 * @method Submissions setUpdatedAt()     Sets the current record's "updated_at" value
 * @method Submissions setFirstName()     Sets the current record's "first_name" value
 * @method Submissions setLastName()      Sets the current record's "last_name" value
 * @method Submissions setAge()           Sets the current record's "age" value
 * @method Submissions setGender()        Sets the current record's "gender" value
 * @method Submissions setPhone()         Sets the current record's "phone" value
 * @method Submissions setCell()          Sets the current record's "cell" value
 * @method Submissions setHeight()        Sets the current record's "height" value
 * @method Submissions setWeight()        Sets the current record's "weight" value
 * @method Submissions setEmail()         Sets the current record's "email" value
 * @method Submissions setAddress()       Sets the current record's "address" value
 * @method Submissions setCity()          Sets the current record's "city" value
 * @method Submissions setState()         Sets the current record's "state" value
 * @method Submissions setZipcode()       Sets the current record's "zipcode" value
 * @method Submissions setInterests()     Sets the current record's "interests" value
 * @method Submissions setSubmittersIp()  Sets the current record's "submitters_ip" value
 * @method Submissions setComments()      Sets the current record's "comments" value
 * @method Submissions setWebsites()      Sets the current record's "Websites" value
 * @method Submissions setStates()        Sets the current record's "States" value
 * 
 * @package    models
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubmissions extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('submissions');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('website_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('age', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('gender', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('phone', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('cell', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('height', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('weight', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('state', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('zipcode', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('interests', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('submitters_ip', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('comments', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Websites', array(
             'local' => 'website_id',
             'foreign' => 'id'));

        $this->hasOne('States', array(
             'local' => 'state',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}