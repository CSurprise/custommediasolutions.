<?php

/**
 * BaseWebsites
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property timestamp $deleted_at
 * @property string $url
 * @property string $name
 * @property string $layout
 * @property string $stylesheets
 * @property string $javascripts
 * @property integer $default_content_id
 * @property integer $redirect_after_submission
 * @property Content $Content
 * @property Content $Content2
 * @property Doctrine_Collection $Submissions
 * 
 * @method integer             getId()                        Returns the current record's "id" value
 * @method timestamp           getCreatedAt()                 Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()                 Returns the current record's "updated_at" value
 * @method timestamp           getDeletedAt()                 Returns the current record's "deleted_at" value
 * @method string              getUrl()                       Returns the current record's "url" value
 * @method string              getName()                      Returns the current record's "name" value
 * @method string              getLayout()                    Returns the current record's "layout" value
 * @method string              getStylesheets()               Returns the current record's "stylesheets" value
 * @method string              getJavascripts()               Returns the current record's "javascripts" value
 * @method integer             getDefaultContentId()          Returns the current record's "default_content_id" value
 * @method integer             getRedirectAfterSubmission()   Returns the current record's "redirect_after_submission" value
 * @method Content             getContent()                   Returns the current record's "Content" value
 * @method Content             getContent2()                  Returns the current record's "Content2" value
 * @method Doctrine_Collection getSubmissions()               Returns the current record's "Submissions" collection
 * @method Websites            setId()                        Sets the current record's "id" value
 * @method Websites            setCreatedAt()                 Sets the current record's "created_at" value
 * @method Websites            setUpdatedAt()                 Sets the current record's "updated_at" value
 * @method Websites            setDeletedAt()                 Sets the current record's "deleted_at" value
 * @method Websites            setUrl()                       Sets the current record's "url" value
 * @method Websites            setName()                      Sets the current record's "name" value
 * @method Websites            setLayout()                    Sets the current record's "layout" value
 * @method Websites            setStylesheets()               Sets the current record's "stylesheets" value
 * @method Websites            setJavascripts()               Sets the current record's "javascripts" value
 * @method Websites            setDefaultContentId()          Sets the current record's "default_content_id" value
 * @method Websites            setRedirectAfterSubmission()   Sets the current record's "redirect_after_submission" value
 * @method Websites            setContent()                   Sets the current record's "Content" value
 * @method Websites            setContent2()                  Sets the current record's "Content2" value
 * @method Websites            setSubmissions()               Sets the current record's "Submissions" collection
 * 
 * @package    models
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWebsites extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('websites');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('layout', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('stylesheets', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('javascripts', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('default_content_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('redirect_after_submission', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Content', array(
             'local' => 'default_content_id',
             'foreign' => 'id'));

        $this->hasOne('Content as Content2', array(
             'local' => 'redirect_after_submission',
             'foreign' => 'id'));

        $this->hasMany('Submissions', array(
             'local' => 'id',
             'foreign' => 'website_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}